<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 加载数据库属性配置文件 -->
    <context:property-placeholder location="classpath:rest-config.properties" />
    <tx:annotation-driven transaction-manager="rest-transactionManager"/>
    <!-- 自动扫描，多个包以 逗号分隔 -->
    <context:component-scan base-package="com.nealma.account, com.nealma.framework"/>
    <aop:aspectj-autoproxy/>

    <!-- 数据源部分 -->
    <bean id="parentDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:initialSize="2"
          p:maxActive="30"
          p:minIdle="3"
          p:maxWait="30000"
          p:timeBetweenEvictionRunsMillis="60000"
          p:minEvictableIdleTimeMillis="60000"
          p:testWhileIdle="true"
          p:testOnBorrow="false"
          p:testOnReturn="false"
          p:validationQuery="SELECT 1"
          p:filters="stat"/>

    <!-- news 数据库 -->
    <bean id="newsDataSource" parent="parentDataSource"
          p:username="jiecaonews"
          p:password="lms"
          p:url="jdbc:mysql://test.db.jiecao.fm:3306/shiro?useUnicode=true&amp;autoReconnect=true"/>

    <!-- pay 数据库 -->
     <bean id="payDataSource" parent="parentDataSource"
          p:username="pay"
          p:password="6d7790dacdc6b2fb415142c605da87f0"
          p:url="jdbc:mysql://test.db.jiecao.fm:3306/shiro?useUnicode=true&amp;autoReconnect=true"/>

    <bean id="rest-dataSource" class="com.nealma.framework.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="newsDataSource" key="news"></entry>
                <entry value-ref="payDataSource" key="pay"></entry>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="newsDataSource" />
    </bean>

    <bean id="rest-sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="rest-dataSource"/>
        <property name="configLocation" value="classpath:rest-mybatis-mapper-config.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.nealma.account.dao"/>
    </bean>

    <bean id="rest-transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="rest-dataSource"/>
    </bean>

    <bean id="exchangeDataSource" class="com.nealma.framework.aspect.ChangeToMethodBeforeAdvice" />

    <tx:advice id="rest-txAdvice" transaction-manager="rest-transactionManager">
        <tx:attributes>
            <tx:method name="insert*" isolation="DEFAULT" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="fetch*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="service" expression="execution (* com.nealma.account.service.*.*(..))"/>
        <aop:advisor advice-ref="rest-txAdvice" pointcut-ref="service" order="2"/>
        <aop:advisor advice-ref="exchangeDataSource" pointcut-ref="service" order="1"/>
    </aop:config>

</beans>